1. I think that the reason why I had to meet the exact output needed for the program, is that we are designing somewhat of a user interface (UI). This is mainly based on the last two files we created for the assignment, which are accountTicketingUI.c and accountTicketingUI.h, in these files we had to create functions that essentially worked like a UI, which allows the user to easily go to different options in the menu. The reason that our output had to match the output given to us is so we can make the UI or the code that the user interacts with simple and easy for them to understand, allowing them to easily understand the program we created. This will give me an understanding of how UIs should be created when programming, that a level of simplicity or understanding for the user should be included. Plus, we are also testing out all possible inputs from the user to make sure that our program is catching any kind of input from the user that is not supported by the code we created, and returning an error.
2. The factors that I might consider when naming a module or library is to name after its purpose in the program. This leads to a good level of organization and understanding in the program when me or someone else is looking at the code and must make changes. For example, the module and header file that handle the account information, such as the person’s name, username, and account type, are all in a file named account. This allows for a level of organization and understanding when programming. Since I can look back at the file and immediately know what it’s for based on the name and the constructs and functions in it. By having naming that relates to the purpose of the module or header library files, it allows for a higher level of understanding and organization when looking back at files and code that was created for the program.
3. A cascading menu is when you select one option from a menu and see several other options appear from it. This can be seen in the function menuLogin, which has several options that can be selected in it. If I were to select option two, that would bring me to the function updateAccount, which in turn has several other options that the user can select from. This allows the code to be more organized for not only the programmer, but also for the user, because if they were to select one option from the menuLogin function, then they will be brought to another function that shows them what tasks can be accomplished with the option they just selected. That is essentially how a cascading menu works, it provides a level of simplicity for the user when navigating the UI, since they are not bombarded by several options on the main menu and are instead able to select one main option that then brings to them several other options that they can select, which relates to the main option they selected.
