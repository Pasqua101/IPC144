1a) None developed (due to inability to complete later milestones)
 b) Ctype Library:
      void getCountryAllCaps(struct Person* ptrPerson)
      void passwordChecker(struct UserLogin* ptrUserLogin);
 c) None developed (due to inability to complete later milestones)
 d) None developed (due to inability to complete later milestones)
2. Two components that I enjoyed developed in the assignment were making a function to convert the country string from lowercase to capital case, which was the function getCountryAllCaps, and the checking to see if the user’s password met the recommended details of a password, which was done in the function passwordChecker. I enjoyed creating the function getCountryAllCaps, since the process to create the function was quite simple. The function only contained a for loop that would look at the characters in the country string in the person struct and would then convert any lowercases to upper case by using the function isupper from the ctype library, and then using the function putchar to replace the lowercase characters with uppercase characters. The modified string would then be returned with the pointer to the Person structure. The second feature that I enjoyed creating was the function passwordChecker, this function mainly used the functions provided by the ctype library, such as isupper, islower, isdigit, etc. To make this function work, I asked the user to enter a new password, and would then pass the string in the password to the function with the use of a pointer to the UserLogin structure. After that, a for loop will look through the string and if any of the characters in the string met the requirements for the password, then the value of the count variable would be increased by one. Once the for loop finished looking through the password, I then compare the value in the count variable with what the length of the password should be, and if the number in the count variable is less than what the length of the password is then the error statement would be printed out. This were the two components I enjoyed working on.
3. Two components that I did not enjoy developing were creating a function to view the status of tickets and creating a function that would automatically generate an account number for the user. I did not really like developing a function that would handle the information from a ticket, mainly because of the amount of information I had to make it display. I did not really mind creating the parameters for the function, since I could have it take in a pointer to the Account structure and an integer to show if a ticket is active or closed. I just did not like having to display the subject line, account number, author, etc. Since, I had to make sure that all of the information was properly being passed through and not being affected by the pointer, because I had a similar problem like that with assignment 1. The other feature I did not like developing was a function to have the program automatically generate an account number based on the highest account number in the Account structure. It took me a while to figure out how I could accomplish this task, I knew that I could use the function rand to generate the number, but it took me some time to figure out how to make it generate an account number based on the increment of the highest account number that is currently there. (I never actually created these functions due to my problem with milestone 1. I am just assuming that I wouldn’t like developing these features, since they already sounded slightly complex to create. these were taken from milestone 1)

Written paragraph for issue experienced in the code:

The problem I faced with creating my code for this assignment was in milestone 1, where I had to initialize a 2D array that had to hold twenty messages and an undefined number of characters. While I did create the required array, I was not able to get it to work properly and kept on receiving an error message (C2078: too many intializers) whenever I attempted to build the code on Visual Studio, this error would show on both my header file and the source code that was provided. I attempted to find a solution to this problem I had by looking up the error message and number on Microsoft’s website for Visual Studio, to see what the reason for the error could be, and looked at websites like Stack Overflow to see if anyone had a similar problem like me and what the fix was. In addition, I tried looking back at readings that were provided about the topic and watched a few videos to see how to properly declare a 2D array. Despite the measures I took to find the solution, I was unable to find any kind of fix to my problem. This left me with a broken segment in my code that left me unable to complete any later parts of the assignment two. I even tried rewriting my code and redownloaded the files off GitHub, in case the files were not properly downloaded, but I unable to fix the problem. However, I did test out some of the functions I created in milestone one a separate source code and saw that they were working the way they should be. While I didn’t get to test the functions, I created on the actually source code for the assignment, the tests I did in the separate file helped me to learn how different function libraries work and how I could use the functions in the ctype and string libraries to help me in the future.
